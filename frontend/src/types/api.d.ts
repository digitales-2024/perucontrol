/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LoginRequest"];
                    "text/json": components["schemas"]["LoginRequest"];
                    "application/*+json": components["schemas"]["LoginRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["LoginResponse"];
                        "application/json": components["schemas"]["LoginResponse"];
                        "text/json": components["schemas"]["LoginResponse"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["RefreshRequest"];
                    "text/json": components["schemas"]["RefreshRequest"];
                    "application/*+json": components["schemas"]["RefreshRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["LoginResponse"];
                        "application/json": components["schemas"]["LoginResponse"];
                        "text/json": components["schemas"]["LoginResponse"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                        "application/json": string;
                        "text/json": string;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Certificate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": Array<components["schemas"]["Certificate"]>;
                        "application/json": Array<components["schemas"]["Certificate"]>;
                        "text/json": Array<components["schemas"]["Certificate"]>;
                    };
                };
            };
        };
        put?: never;
        /** Create */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CertificateCreateDTO"];
                    "text/json": components["schemas"]["CertificateCreateDTO"];
                    "application/*+json": components["schemas"]["CertificateCreateDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Certificate"];
                        "application/json": components["schemas"]["Certificate"];
                        "text/json": components["schemas"]["Certificate"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Certificate/{id}/gen-certificate-word": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate Certificate Word */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["FileContentResult"];
                        "application/json": components["schemas"]["FileContentResult"];
                        "text/json": components["schemas"]["FileContentResult"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Certificate/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get one by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Certificate"];
                        "application/json": components["schemas"]["Certificate"];
                        "text/json": components["schemas"]["Certificate"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Deactivate by id */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Partial edit one by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CertificatePatchDTO"];
                    "text/json": components["schemas"]["CertificatePatchDTO"];
                    "application/*+json": components["schemas"]["CertificatePatchDTO"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Certificate/{id}/reactivate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Reactivate by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Client": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": Array<components["schemas"]["Client"]>;
                        "application/json": Array<components["schemas"]["Client"]>;
                        "text/json": Array<components["schemas"]["Client"]>;
                    };
                };
            };
        };
        put?: never;
        /** Create */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ClientCreateDTO"];
                    "text/json": components["schemas"]["ClientCreateDTO"];
                    "application/*+json": components["schemas"]["ClientCreateDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Client"];
                        "application/json": components["schemas"]["Client"];
                        "text/json": components["schemas"]["Client"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Client/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get one by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Client"];
                        "application/json": components["schemas"]["Client"];
                        "text/json": components["schemas"]["Client"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Partial edit one by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ClientPatchDTO"];
                    "text/json": components["schemas"]["ClientPatchDTO"];
                    "application/*+json": components["schemas"]["ClientPatchDTO"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Client/search-by-ruc/{ruc}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get business data by RUC */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    ruc: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["SunatQueryResponse"];
                        "application/json": components["schemas"]["SunatQueryResponse"];
                        "text/json": components["schemas"]["SunatQueryResponse"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Client/{id}/reactivate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Reactivate by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Project": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": Array<components["schemas"]["ProjectSummary"]>;
                        "application/json": Array<components["schemas"]["ProjectSummary"]>;
                        "text/json": Array<components["schemas"]["ProjectSummary"]>;
                    };
                };
            };
        };
        put?: never;
        /** Create */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProjectCreateDTO"];
                    "text/json": components["schemas"]["ProjectCreateDTO"];
                    "application/*+json": components["schemas"]["ProjectCreateDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Project"];
                        "application/json": components["schemas"]["Project"];
                        "text/json": components["schemas"]["Project"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Project/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get one by Id */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Project"];
                        "application/json": components["schemas"]["Project"];
                        "text/json": components["schemas"]["Project"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Deactivate by id */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update project */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProjectPatchDTO"];
                    "text/json": components["schemas"]["ProjectPatchDTO"];
                    "application/*+json": components["schemas"]["ProjectPatchDTO"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Project/{id}/update-state": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Project State */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProjectStatusPatchDTO"];
                    "text/json": components["schemas"]["ProjectStatusPatchDTO"];
                    "application/*+json": components["schemas"]["ProjectStatusPatchDTO"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Project/{id}/gen-operations-sheet": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate Operations Sheet */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProjectOperationSheetExport"];
                    "text/json": components["schemas"]["ProjectOperationSheetExport"];
                    "application/*+json": components["schemas"]["ProjectOperationSheetExport"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["FileContentResult"];
                        "application/json": components["schemas"]["FileContentResult"];
                        "text/json": components["schemas"]["FileContentResult"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Project/{id}/reactivate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Reactivate by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/ProjectOperationSheet": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": Array<components["schemas"]["ProjectOperationSheet"]>;
                        "application/json": Array<components["schemas"]["ProjectOperationSheet"]>;
                        "text/json": Array<components["schemas"]["ProjectOperationSheet"]>;
                    };
                };
            };
        };
        put?: never;
        /** Create */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProjectOperationSheetCreateDTO"];
                    "text/json": components["schemas"]["ProjectOperationSheetCreateDTO"];
                    "application/*+json": components["schemas"]["ProjectOperationSheetCreateDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProjectOperationSheet"];
                        "application/json": components["schemas"]["ProjectOperationSheet"];
                        "text/json": components["schemas"]["ProjectOperationSheet"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ProjectOperationSheet/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get one by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProjectOperationSheet"];
                        "application/json": components["schemas"]["ProjectOperationSheet"];
                        "text/json": components["schemas"]["ProjectOperationSheet"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Deactivate by id */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Partial edit one by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProjectOperationSheetPatchDTO"];
                    "text/json": components["schemas"]["ProjectOperationSheetPatchDTO"];
                    "application/*+json": components["schemas"]["ProjectOperationSheetPatchDTO"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/ProjectOperationSheet/{id}/reactivate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Reactivate by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Quotation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": Array<components["schemas"]["Quotation2"]>;
                        "application/json": Array<components["schemas"]["Quotation2"]>;
                        "text/json": Array<components["schemas"]["Quotation2"]>;
                    };
                };
            };
        };
        put?: never;
        /** Create a Quotation */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["QuotationCreateDTO"];
                    "text/json": components["schemas"]["QuotationCreateDTO"];
                    "application/*+json": components["schemas"]["QuotationCreateDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Quotation2"];
                        "application/json": components["schemas"]["Quotation2"];
                        "text/json": components["schemas"]["Quotation2"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Quotation/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get one by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Quotation2"];
                        "application/json": components["schemas"]["Quotation2"];
                        "text/json": components["schemas"]["Quotation2"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Partial edit one by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["QuotationPatchDTO"];
                    "text/json": components["schemas"]["QuotationPatchDTO"];
                    "application/*+json": components["schemas"]["QuotationPatchDTO"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Quotation/{id}/update-state": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Quotation State */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["QuotationStatusPatchDTO"];
                    "text/json": components["schemas"]["QuotationStatusPatchDTO"];
                    "application/*+json": components["schemas"]["QuotationStatusPatchDTO"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Quotation/{id}/gen-excel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate Excel */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["QuotationExportDto"];
                    "text/json": components["schemas"]["QuotationExportDto"];
                    "application/*+json": components["schemas"]["QuotationExportDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["FileContentResult"];
                        "application/json": components["schemas"]["FileContentResult"];
                        "text/json": components["schemas"]["FileContentResult"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Quotation/approved/not-associated": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get approved and not associated project */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": Array<components["schemas"]["Quotation2"]>;
                        "application/json": Array<components["schemas"]["Quotation2"]>;
                        "text/json": Array<components["schemas"]["Quotation2"]>;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Quotation/{id}/reactivate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Reactivate by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Service": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": Array<components["schemas"]["Service"]>;
                        "application/json": Array<components["schemas"]["Service"]>;
                        "text/json": Array<components["schemas"]["Service"]>;
                    };
                };
            };
        };
        put?: never;
        /** Create */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ServiceCreateDTO"];
                    "text/json": components["schemas"]["ServiceCreateDTO"];
                    "application/*+json": components["schemas"]["ServiceCreateDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Service"];
                        "application/json": components["schemas"]["Service"];
                        "text/json": components["schemas"]["Service"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Service/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get one by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Service"];
                        "application/json": components["schemas"]["Service"];
                        "text/json": components["schemas"]["Service"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Deactivate by id */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Partial edit one by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ServicePatchDTO"];
                    "text/json": components["schemas"]["ServicePatchDTO"];
                    "application/*+json": components["schemas"]["ServicePatchDTO"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Service/{id}/reactivate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Reactivate by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Supply": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": Array<components["schemas"]["Supply"]>;
                        "application/json": Array<components["schemas"]["Supply"]>;
                        "text/json": Array<components["schemas"]["Supply"]>;
                    };
                };
            };
        };
        put?: never;
        /** Create */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SupplyCreateDTO"];
                    "text/json": components["schemas"]["SupplyCreateDTO"];
                    "application/*+json": components["schemas"]["SupplyCreateDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Supply"];
                        "application/json": components["schemas"]["Supply"];
                        "text/json": components["schemas"]["Supply"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Supply/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get one by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Supply"];
                        "application/json": components["schemas"]["Supply"];
                        "text/json": components["schemas"]["Supply"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Deactivate by id */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Partial edit one by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SupplyPatchDTO"];
                    "text/json": components["schemas"]["SupplyPatchDTO"];
                    "application/*+json": components["schemas"]["SupplyPatchDTO"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/Supply/{id}/reactivate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Reactivate by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/TermsAndConditions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": Array<components["schemas"]["TermsAndConditions"]>;
                        "application/json": Array<components["schemas"]["TermsAndConditions"]>;
                        "text/json": Array<components["schemas"]["TermsAndConditions"]>;
                    };
                };
            };
        };
        put?: never;
        /** Create */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TermsAndConditionsCreateDTO"];
                    "text/json": components["schemas"]["TermsAndConditionsCreateDTO"];
                    "application/*+json": components["schemas"]["TermsAndConditionsCreateDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TermsAndConditions"];
                        "application/json": components["schemas"]["TermsAndConditions"];
                        "text/json": components["schemas"]["TermsAndConditions"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/TermsAndConditions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get one by ID */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TermsAndConditions"];
                        "application/json": components["schemas"]["TermsAndConditions"];
                        "text/json": components["schemas"]["TermsAndConditions"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Deactivate by id */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Partial edit one by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TermsAndConditionsPatchDTO"];
                    "text/json": components["schemas"]["TermsAndConditionsPatchDTO"];
                    "application/*+json": components["schemas"]["TermsAndConditionsPatchDTO"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/TermsAndConditions/{id}/reactivate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Reactivate by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/api/User": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets info about the currently logged in user, based on the JWT token. */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["UserReturn"];
                        "application/json": components["schemas"]["UserReturn"];
                        "text/json": components["schemas"]["UserReturn"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Certificate: {
            /** Format: int32 */
            projectNumber: number;
            /** Format: date-time */
            creationDate: string;
            /** Format: date-time */
            expirationDate: string;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        CertificateCreateDTO: {
            /** Format: uuid */
            projectId: string;
            /** Format: date-time */
            creationDate: string;
            /** Format: date-time */
            expirationDate: string;
        };
        CertificatePatchDTO: Record<string, never>;
        Client: {
            typeDocument: string;
            typeDocumentValue: string;
            razonSocial?: string | null;
            businessType: string;
            name: string;
            fiscalAddress: string;
            email: string;
            clientLocations: Array<components["schemas"]["ClientLocation"]>;
            phoneNumber: string;
            contactName?: string | null;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        Client2: {
            typeDocument: string;
            typeDocumentValue: string;
            razonSocial?: string | null;
            businessType: string;
            name: string;
            fiscalAddress: string;
            email: string;
            clientLocations: components["schemas"];
            phoneNumber: string;
            contactName?: string | null;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        ClientCreateDTO: {
            typeDocument: string;
            typeDocumentValue: string;
            razonSocial?: string | null;
            businessType: string;
            name: string;
            fiscalAddress: string;
            email: string;
            clientLocations: Array<components["schemas"]["ClientLocationDTO"]>;
            phoneNumber: string;
            contactName?: string | null;
        };
        ClientLocation: {
            address: string;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        ClientLocationDTO: {
            address: string;
        };
        ClientPatchDTO: {
            razonSocial?: string | null;
            businessType?: string | null;
            name?: string | null;
            fiscalAddress?: string | null;
            email?: string | null;
            phoneNumber?: string | null;
            contactName?: string | null;
        };
        /** @enum {unknown} */
        DegressInfestation: "High" | "Moderate" | "Low" | "Negligible";
        EntityTagHeaderValue: {
            tag?: components["schemas"]["StringSegment"];
            isWeak?: boolean;
        } | null;
        FileContentResult: {
            /** Format: byte */
            fileContents?: string;
            contentType?: string | null;
            fileDownloadName?: string | null;
            /** Format: date-time */
            lastModified?: string | null;
            entityTag?: components["schemas"]["EntityTagHeaderValue"];
            enableRangeProcessing?: boolean;
        };
        LoginRequest: {
            /** @default admin@admin.com */
            email: string;
            /** @default Acide2025/1 */
            password: string;
        };
        LoginResponse: {
            accessToken: string;
            refreshToken: string;
            /** Format: int32 */
            accessExpiresIn: number;
            /** Format: int32 */
            refreshExpiresIn: number;
        };
        /** @enum {unknown|null} */
        NullableOfDegressInfestation: "High" | "Moderate" | "Low" | "Negligible" | null;
        /** @enum {unknown|null} */
        NullableOfQuotationFrequency: "Bimonthly" | "Quarterly" | "Semiannual" | null;
        ProblemDetails: {
            type?: string | null;
            title?: string | null;
            /** Format: int32 */
            status?: number | null;
            detail?: string | null;
            instance?: string | null;
        };
        Project: {
            address: string;
            /** Format: uint32 */
            area: number;
            status: components["schemas"]["ProjectStatus"];
            /** Format: uint32 */
            spacesCount: number;
            /** Format: int32 */
            orderNumber?: number;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        ProjectCreateDTO: {
            /** Format: uuid */
            clientId: string;
            /** Format: uuid */
            quotationId?: string | null;
            /** @description Array of Service IDs */
            services: Array<string>;
            address: string;
            /** Format: uint32 */
            area: number;
            /** Format: uint32 */
            spacesCount: number;
        };
        ProjectOperationSheet: {
            /** Format: date-time */
            operationDate: string;
            enterTime: string;
            leaveTime: string;
            sanitaryCondition: string;
            treatedAreas: string;
            insects: string;
            rodents: string;
            otherPlagues: string;
            insecticide: string;
            insecticide2: string;
            rodenticide: string;
            desinfectant: string;
            otherProducts: string;
            insecticideAmount: string;
            insecticideAmount2: string;
            rodenticideAmount: string;
            desinfectantAmount: string;
            otherProductsAmount: string;
            ratExtermination1: string;
            ratExtermination2: string;
            ratExtermination3: string;
            ratExtermination4: string;
            staff1: string;
            staff2: string;
            staff3: string;
            staff4: string;
            aspersionManual?: boolean;
            aspercionMotor?: boolean;
            nebulizacionFrio?: boolean;
            nebulizacionCaliente?: boolean;
            nebulizacionCebosTotal?: boolean;
            colocacionCebosCebaderos?: boolean;
            colocacionCebosRepuestos?: boolean;
            degreeInsectInfectivity?: components["schemas"]["DegressInfestation"];
            degreeRodentInfectivity?: components["schemas"]["DegressInfestation"];
            observations?: string;
            recommendations?: string;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        ProjectOperationSheetCreateDTO: {
            /** Format: uuid */
            projectId: string;
            /** Format: date-time */
            operationDate?: string | null;
            enterTime?: string | null;
            leaveTime?: string | null;
            sanitaryCondition?: string | null;
            treatedAreas?: string | null;
            insects?: string | null;
            rodents?: string | null;
            otherPlagues?: string | null;
            insecticide?: string | null;
            insecticide2?: string | null;
            rodenticide?: string | null;
            desinfectant?: string | null;
            otherProducts?: string | null;
            insecticideAmount?: string | null;
            insecticideAmount2?: string | null;
            rodenticideAmount?: string | null;
            desinfectantAmount?: string | null;
            otherProductsAmount?: string | null;
            ratExtermination1?: string | null;
            ratExtermination2?: string | null;
            ratExtermination3?: string | null;
            ratExtermination4?: string | null;
            staff1?: string | null;
            staff2?: string | null;
            staff3?: string | null;
            staff4?: string | null;
            aspersionManual?: boolean | null;
            aspercionMotor?: boolean | null;
            nebulizacionFrio?: boolean | null;
            nebulizacionCaliente?: boolean | null;
            nebulizacionCebosTotal?: boolean | null;
            colocacionCebosCebaderos?: boolean | null;
            colocacionCebosRepuestos?: boolean | null;
            degreeInsectInfectivity?: components["schemas"]["NullableOfDegressInfestation"];
            degreeRodentInfectivity?: components["schemas"]["NullableOfDegressInfestation"];
            observations?: string | null;
            recommendations?: string | null;
        };
        ProjectOperationSheetExport: {
            operationDate?: string;
            enterTime?: string;
            leaveTime?: string;
            sanitaryCondition?: string;
            treatedAreas?: string;
            insects?: string;
            rodents?: string;
            otherPlagues?: string;
            insecticide?: string;
            insecticide2?: string;
            rodenticide?: string;
            desinfectant?: string;
            otherProducts?: string;
            insecticideAmount?: string;
            insecticideAmount2?: string;
            rodenticideAmount?: string;
            desinfectantAmount?: string;
            otherProductsAmount?: string;
            ratExtermination1?: string;
            ratExtermination2?: string;
            ratExtermination3?: string;
            ratExtermination4?: string;
            staff1?: string;
            staff2?: string;
            staff3?: string;
            staff4?: string;
            aspersionManual?: boolean;
            aspersionMotor?: boolean;
            nebulizacionFrio?: boolean;
            nebulizacionCaliente?: boolean;
            nebulizacionCebosTotal?: boolean;
            colocacionCebosCebaderos?: boolean;
            colocacionCebosRepuestos?: boolean;
            degreeInsectInfectivity?: components["schemas"]["DegressInfestation"];
            degreeRodentInfectivity?: components["schemas"]["DegressInfestation"];
            observations?: string;
            recommendations?: string;
        };
        ProjectOperationSheetPatchDTO: {
            /** Format: uuid */
            projectId?: string | null;
            /** Format: date-time */
            operationDate?: string | null;
            enterTime?: string | null;
            leaveTime?: string | null;
            sanitaryCondition?: string | null;
            treatedAreas?: string | null;
            insects?: string | null;
            rodents?: string | null;
            otherPlagues?: string | null;
            insecticide?: string | null;
            insecticide2?: string | null;
            rodenticide?: string | null;
            desinfectant?: string | null;
            otherProducts?: string | null;
            insecticideAmount?: string | null;
            insecticideAmount2?: string | null;
            rodenticideAmount?: string | null;
            desinfectantAmount?: string | null;
            otherProductsAmount?: string | null;
            ratExtermination1?: string | null;
            ratExtermination2?: string | null;
            ratExtermination3?: string | null;
            ratExtermination4?: string | null;
            staff1?: string | null;
            staff2?: string | null;
            staff3?: string | null;
            staff4?: string | null;
            aspersionManual?: boolean | null;
            aspercionMotor?: boolean | null;
            nebulizacionFrio?: boolean | null;
            nebulizacionCaliente?: boolean | null;
            nebulizacionCebosTotal?: boolean | null;
            colocacionCebosCebaderos?: boolean | null;
            colocacionCebosRepuestos?: boolean | null;
            degreeInsectInfectivity?: components["schemas"]["NullableOfDegressInfestation"];
            degreeRodentInfectivity?: components["schemas"]["NullableOfDegressInfestation"];
            observations?: string | null;
            recommendations?: string | null;
        };
        ProjectPatchDTO: {
            /** Format: uuid */
            clientId?: string | null;
            /** Format: uuid */
            quotationId?: string | null;
            /** @description Array of Service IDs */
            services?: Array<string> | null;
            address?: string | null;
            /** Format: uint32 */
            area?: number | null;
            /** Format: uint32 */
            spacesCount?: number | null;
        };
        /** @enum {unknown} */
        ProjectStatus: "Pending" | "Approved" | "Rejected";
        ProjectStatusPatchDTO: {
            status?: components["schemas"]["ProjectStatus"];
        };
        ProjectSummary: {
            client?: components["schemas"]["Client"];
            services?: Array<components["schemas"]["Service"]>;
            quotation?: components["schemas"]["Quotation"];
            address: string;
            /** Format: uint32 */
            area: number;
            status: components["schemas"]["ProjectStatus"];
            /** Format: uint32 */
            spacesCount: number;
            /** Format: int32 */
            orderNumber: number;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        Quotation: {
            client?: components["schemas"]["Client2"];
            services?: Array<components["schemas"]>;
            status: components["schemas"]["QuotationStatus"];
            frequency: components["schemas"]["QuotationFrequency"];
            /** Format: uint32 */
            area: number;
            /** Format: uint32 */
            spacesCount: number;
            hasTaxes: boolean;
            termsAndConditions: string;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        } | null;
        Quotation2: {
            client?: components["schemas"]["Client"];
            services?: Array<components["schemas"]["Service"]>;
            status: components["schemas"]["QuotationStatus"];
            frequency: components["schemas"]["QuotationFrequency"];
            /** Format: uint32 */
            area: number;
            /** Format: uint32 */
            spacesCount: number;
            hasTaxes: boolean;
            termsAndConditions: string;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        QuotationCreateDTO: {
            /** Format: uuid */
            clientId: string;
            serviceIds: Array<string>;
            /** Format: uint32 */
            area: number;
            /** Format: uint32 */
            spacesCount: number;
            frequency: components["schemas"]["QuotationFrequency"];
            hasTaxes: boolean;
            termsAndConditions: string;
        };
        QuotationExportDto: {
            /** Format: date-time */
            validUntil: string;
            guarantee: string;
            deliverables: string;
        };
        /** @enum {unknown} */
        QuotationFrequency: "Bimonthly" | "Quarterly" | "Semiannual";
        QuotationPatchDTO: {
            /** Format: uuid */
            clientId?: string | null;
            serviceIds?: Array<string> | null;
            /** Format: uint32 */
            area?: number | null;
            /** Format: uint32 */
            spacesCount?: number | null;
            frequency?: components["schemas"]["NullableOfQuotationFrequency"];
            hasTaxes?: boolean | null;
            termsAndConditions?: string | null;
        };
        /** @enum {unknown} */
        QuotationStatus: "Pending" | "Approved" | "Rejected";
        QuotationStatusPatchDTO: {
            status: components["schemas"]["QuotationStatus"];
        };
        RefreshRequest: {
            refreshToken: string;
        };
        Service: {
            name: string;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        ServiceCreateDTO: {
            name: string;
        };
        ServicePatchDTO: {
            name?: string | null;
        };
        StringSegment: {
            buffer?: string | null;
            /** Format: int32 */
            offset?: number;
            /** Format: int32 */
            length?: number;
            value?: string | null;
            hasValue?: boolean;
        };
        SunatQueryResponse: {
            razonSocial?: string | null;
            name?: string | null;
            fiscalAddress?: string | null;
            businessType?: string | null;
            contactName?: string | null;
        };
        Supply: {
            name: string;
            unit: string;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        SupplyCreateDTO: {
            name: string;
            unit: string;
        };
        SupplyPatchDTO: {
            unit: string;
        };
        TermsAndConditions: {
            name: string;
            content: string;
            /** Format: uuid */
            id?: string;
            isActive?: boolean;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            modifiedAt?: string;
        };
        TermsAndConditionsCreateDTO: {
            name: string;
            content: string;
        };
        TermsAndConditionsPatchDTO: {
            name?: string | null;
            content?: string | null;
        };
        UserReturn: {
            username: string;
            email: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
